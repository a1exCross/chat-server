name: git_actions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: "cr.selcloud.ru/alexzabolotskikh"
  IMAGE_NAME: "chat_server"
  CONTAINER_NAME: "chat_server_container"

jobs:
  linter:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.19'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53
          args: --timeout=30m --config=./.golangci.pipeline.yaml --issues-exit-code=0
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v3

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker registry
        run: docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY

      - name: Create env file
        run: |
          touch prod.env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          echo MIGRATION_DIR=${{ secrets.MIGRATION_DIR }}
          
          echo PG_DSN=${{ secrets.PG_DSN }}
          echo MIGRATION_DSN=${{ secrets.MIGRATION_DSN }}
        
          echo GRPC_HOST=${{ secrets.GRPC_HOST }}
          echo GRPC_PORT=${{ secrets.GRPC_PORT }}
          cat prod.env  

      - name: Build and push image
        run: |
          TAG_NAME=$(echo $GITHUB_SHA | head -c7)
          docker buildx create --use
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME .
      
  # deploy-image:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push

  #   steps:
  #     - name: Deploy to Selectel
  #       uses: appleboy/ssh-action@v1.0.0
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         key: ${{ secrets.SSHKEY }}
  #         envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
  #         script: |
  #           TAG_NAME=$(echo $GITHUB_SHA | head -c7)
  #           docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} $REGISTRY
  #           docker stop $CONTAINER_NAME
  #           docker rm $CONTAINER_NAME
  #           docker run -d -p 50053:50053 --name $CONTAINER_NAME -t $REGISTRY/$IMAGE_NAME:$TAG_NAME
